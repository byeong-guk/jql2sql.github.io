import{_ as t,M as r,p as s,q as d,R as e,t as n,N as i,a1 as l}from"./framework-96b046e1.js";const o={},c=e("h1",{id:"development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#development","aria-hidden":"true"},"#"),n(" Development")],-1),u=e("p",null,"This package is consist fo three parts. JQL Parser, SQL Transpiler and Extended Function.",-1),p=e("h2",{id:"jql-parser",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#jql-parser","aria-hidden":"true"},"#"),n(" JQL Parser")],-1),h={href:"https://nearley.js.org/",target:"_blank",rel:"noopener noreferrer"},x=l(`<ul><li>To build JQL Parser</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm run build:parser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>To test JQL Parser</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm run test:parser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sql-transpiler" tabindex="-1"><a class="header-anchor" href="#sql-transpiler" aria-hidden="true">#</a> SQL Transpiler</h2><p>From AST, we transpile the tree to SQL.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm run test:transpiler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="extended-function" tabindex="-1"><a class="header-anchor" href="#extended-function" aria-hidden="true">#</a> Extended Function</h2><p><strong>Will be supported</strong>, <strong>Not supported yet</strong>.</p><p>You can define our own function to extend your searching like below.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>field = myfunction(arg1, arg2) and date &lt; now()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function m(v,g){const a=r("ExternalLinkIcon");return s(),d("div",null,[c,u,p,e("p",null,[n("We implement our own JQL parser by using "),e("a",h,[n("nearley"),i(a)]),n(". It parses jql text to AST(Abstracted Syntax Tree) for transpiler.")]),x])}const b=t(o,[["render",m],["__file","index.html.vue"]]);export{b as default};
